@use 'fonts/roboto';

.theme-light {
	--md-sys-primary-hsl: 260, 73%, 47.8%;
	--md-sys-primary: rgb(91, 33, 211);
	--md-sys-surface-tint: rgb(106, 55, 226);
	--md-sys-on-primary: rgb(255, 255, 255);
	--md-sys-primary-container: rgb(129, 82, 250);
	--md-sys-on-primary-container: rgb(255, 255, 255);
	--md-sys-secondary: rgb(101, 82, 157);
	--md-sys-on-secondary: rgb(255, 255, 255);
	--md-sys-secondary-container: rgb(201, 182, 255);
	--md-sys-on-secondary-container: rgb(56, 36, 109);
	--md-sys-tertiary: rgb(149, 0, 130);
	--md-sys-on-tertiary: rgb(255, 255, 255);
	--md-sys-tertiary-container: rgb(196, 57, 171);
	--md-sys-on-tertiary-container: rgb(255, 255, 255);
	--md-sys-error-rgb: 186, 26, 26;
	--md-sys-error: rgb(var(--md-sys-error-rgb));
	--md-sys-on-error: rgb(255, 255, 255);
	--md-sys-error-container: rgb(255, 218, 214);
	--md-sys-on-error-container: rgb(65, 0, 2);
	--md-sys-background: rgb(253, 247, 255);
	--md-sys-on-background: rgb(29, 26, 36);
	--md-sys-surface: rgb(253, 247, 255);
	--md-sys-on-surface: rgb(29, 26, 36);
	--md-sys-surface-variant: rgb(231, 223, 244);
	--md-sys-on-surface-variant: rgb(73, 68, 85);
	--md-sys-outline: rgb(122, 116, 135);
	--md-sys-outline-variant: rgb(203, 195, 216);
	--md-sys-shadow: rgb(0, 0, 0);
	--md-sys-scrim: rgb(0, 0, 0);
	--md-sys-inverse-surface: rgb(50, 47, 57);
	--md-sys-inverse-on-surface: rgb(245, 238, 252);
	--md-sys-inverse-primary: rgb(206, 189, 255);
	--md-sys-primary-fixed: rgb(232, 221, 255);
	--md-sys-on-primary-fixed: rgb(33, 0, 94);
	--md-sys-primary-fixed-dim: rgb(206, 189, 255);
	--md-sys-on-primary-fixed-variant: rgb(82, 9, 202);
	--md-sys-secondary-fixed: rgb(232, 221, 255);
	--md-sys-on-secondary-fixed: rgb(33, 6, 86);
	--md-sys-secondary-fixed-dim: rgb(206, 189, 255);
	--md-sys-on-secondary-fixed-variant: rgb(77, 58, 132);
	--md-sys-tertiary-fixed: rgb(255, 215, 239);
	--md-sys-on-tertiary-fixed: rgb(58, 0, 49);
	--md-sys-tertiary-fixed-dim: rgb(255, 173, 230);
	--md-sys-on-tertiary-fixed-variant: rgb(133, 0, 116);
	--md-sys-surface-dim: rgb(222, 215, 229);
	--md-sys-surface-bright: rgb(253, 247, 255);
	--md-sys-surface-container-lowest: rgb(255, 255, 255);
	--md-sys-surface-container-low: rgb(248, 241, 255);
	--md-sys-surface-container: rgb(242, 235, 249);
	--md-sys-surface-container-high: rgb(236, 229, 244);
	--md-sys-surface-container-highest: rgb(231, 224, 238);
	--md-extended-green-color-rgb: 0, 108, 73;
	--md-extended-green-color: rgb(var(--md-extended-green-color-rgb));
	--md-extended-green-on-color: rgb(255, 255, 255);
	--md-extended-green-color-container: rgb(37, 195, 137);
	--md-extended-green-on-color-container: rgb(0, 40, 24);
	--md-extended-red-color: rgb(160, 0, 76);
	--md-extended-red-on-color: rgb(255, 255, 255);
	--md-extended-red-color-container: rgb(221, 32, 112);
	--md-extended-red-on-color-container: rgb(255, 255, 255);
	--md-extended-orange-color: rgb(169, 56, 6);
	--md-extended-orange-on-color: rgb(255, 255, 255);
	--md-extended-orange-color-container: rgb(255, 123, 76);
	--md-extended-orange-on-color-container: rgb(48, 9, 0);
	--md-extended-yellow-color: rgb(131, 85, 0);
	--md-extended-yellow-on-color: rgb(255, 255, 255);
	--md-extended-yellow-color-container: rgb(255, 172, 35);
	--md-extended-yellow-on-color-container: rgb(68, 42, 0);
	--md-extended-cyan-color: rgb(0, 104, 116);
	--md-extended-cyan-on-color: rgb(255, 255, 255);
	--md-extended-cyan-color-container: rgb(40, 200, 219);
	--md-extended-cyan-on-color-container: rgb(0, 47, 53);
	--md-extended-blue-color: rgb(40, 60, 186);
	--md-extended-blue-on-color: rgb(255, 255, 255);
	--md-extended-blue-color-container: rgb(81, 100, 224);
	--md-extended-blue-on-color-container: rgb(255, 255, 255);
	--md-extended-purple-color: rgb(85, 34, 199);
	--md-extended-purple-on-color: rgb(255, 255, 255);
	--md-extended-purple-color-container: rgb(122, 81, 237);
	--md-extended-purple-on-color-container: rgb(255, 255, 255);
	--md-extended-pink-color: rgb(150, 0, 126);
	--md-extended-pink-on-color: rgb(255, 255, 255);
	--md-extended-pink-color-container: rgb(198, 55, 168);
	--md-extended-pink-on-color-container: rgb(255, 255, 255);
}

.theme-dark {
	--md-sys-primary-hsl: 255, 100%, 87.1%;
	--md-sys-primary: rgb(206, 189, 255);
	--md-sys-surface-tint: rgb(206, 189, 255);
	--md-sys-on-primary: rgb(57, 0, 148);
	--md-sys-primary-container: rgb(126, 79, 246);
	--md-sys-on-primary-container: rgb(255, 255, 255);
	--md-sys-secondary: rgb(206, 189, 255);
	--md-sys-on-secondary: rgb(54, 34, 107);
	--md-sys-secondary-container: rgb(68, 49, 122);
	--md-sys-on-secondary-container: rgb(217, 202, 255);
	--md-sys-tertiary: rgb(255, 173, 230);
	--md-sys-on-tertiary: rgb(94, 0, 81);
	--md-sys-tertiary-container: rgb(192, 54, 167);
	--md-sys-on-tertiary-container: rgb(255, 255, 255);
	--md-sys-error-rgb: 255, 180, 171;
	--md-sys-error: rgb(var(--md-sys-error-rgb));
	--md-sys-on-error: rgb(105, 0, 5);
	--md-sys-error-container: rgb(147, 0, 10);
	--md-sys-on-error-container: rgb(255, 218, 214);
	--md-sys-background: rgb(20, 18, 27);
	--md-sys-on-background: rgb(231, 224, 238);
	--md-sys-surface: rgb(20, 18, 27);
	--md-sys-on-surface: rgb(231, 224, 238);
	--md-sys-surface-variant: rgb(73, 68, 85);
	--md-sys-on-surface-variant: rgb(203, 195, 216);
	--md-sys-outline: rgb(148, 142, 161);
	--md-sys-outline-variant: rgb(73, 68, 85);
	--md-sys-shadow: rgb(0, 0, 0);
	--md-sys-scrim: rgb(0, 0, 0);
	--md-sys-inverse-surface: rgb(231, 224, 238);
	--md-sys-inverse-on-surface: rgb(50, 47, 57);
	--md-sys-inverse-primary: rgb(106, 55, 226);
	--md-sys-primary-fixed: rgb(232, 221, 255);
	--md-sys-on-primary-fixed: rgb(33, 0, 94);
	--md-sys-primary-fixed-dim: rgb(206, 189, 255);
	--md-sys-on-primary-fixed-variant: rgb(82, 9, 202);
	--md-sys-secondary-fixed: rgb(232, 221, 255);
	--md-sys-on-secondary-fixed: rgb(33, 6, 86);
	--md-sys-secondary-fixed-dim: rgb(206, 189, 255);
	--md-sys-on-secondary-fixed-variant: rgb(77, 58, 132);
	--md-sys-tertiary-fixed: rgb(255, 215, 239);
	--md-sys-on-tertiary-fixed: rgb(58, 0, 49);
	--md-sys-tertiary-fixed-dim: rgb(255, 173, 230);
	--md-sys-on-tertiary-fixed-variant: rgb(133, 0, 116);
	--md-sys-surface-dim: rgb(20, 18, 27);
	--md-sys-surface-bright: rgb(59, 55, 66);
	--md-sys-surface-container-lowest: rgb(15, 13, 22);
	--md-sys-surface-container-low: rgb(29, 26, 36);
	--md-sys-surface-container: rgb(33, 30, 40);
	--md-sys-surface-container-high: rgb(43, 40, 51);
	--md-sys-surface-container-highest: rgb(54, 51, 62);
	--md-extended-green-color-rgb: 77, 223, 162;
	--md-extended-green-color: rgb(var(--md-extended-green-color-rgb));
	--md-extended-green-on-color: rgb(0, 56, 36);
	--md-extended-green-color-container: rgb(0, 173, 119);
	--md-extended-green-on-color-container: rgb(0, 7, 3);
	--md-extended-red-color: rgb(255, 177, 196);
	--md-extended-red-on-color: rgb(101, 0, 46);
	--md-extended-red-color-container: rgb(220, 31, 111);
	--md-extended-red-on-color-container: rgb(255, 255, 255);
	--md-extended-orange-color: rgb(255, 181, 156);
	--md-extended-orange-on-color: rgb(92, 25, 0);
	--md-extended-orange-color-container: rgb(199, 77, 30);
	--md-extended-orange-on-color-container: rgb(255, 255, 255);
	--md-extended-yellow-color: rgb(255, 207, 146);
	--md-extended-yellow-on-color: rgb(69, 43, 0);
	--md-extended-yellow-color-container: rgb(237, 157, 12);
	--md-extended-yellow-on-color-container: rgb(51, 30, 0);
	--md-extended-cyan-color: rgb(77, 223, 242);
	--md-extended-cyan-on-color: rgb(0, 54, 61);
	--md-extended-cyan-color-container: rgb(0, 180, 199);
	--md-extended-cyan-on-color-container: rgb(0, 28, 32);
	--md-extended-blue-color: rgb(187, 195, 255);
	--md-extended-blue-on-color: rgb(0, 27, 150);
	--md-extended-blue-color-container: rgb(71, 91, 214);
	--md-extended-blue-on-color-container: rgb(255, 255, 255);
	--md-extended-purple-color: rgb(205, 189, 255);
	--md-extended-purple-on-color: rgb(55, 0, 149);
	--md-extended-purple-color-container: rgb(113, 71, 228);
	--md-extended-purple-on-color-container: rgb(255, 255, 255);
	--md-extended-pink-color: rgb(255, 173, 227);
	--md-extended-pink-on-color: rgb(95, 0, 79);
	--md-extended-pink-color-container: rgb(193, 49, 163);
	--md-extended-pink-on-color-container: rgb(255, 255, 255);
}

:root {
	--md-white: rgb(255, 255, 255);
	--md-black: rgb(0, 0, 0);
	--md-ref-palette-primary100: rgb(255, 255, 255);
	--md-ref-palette-primary99: rgb(255, 251, 255);
	--md-ref-palette-primary98: rgb(253, 247, 255);
	--md-ref-palette-primary95: rgb(245, 238, 255);
	--md-ref-palette-primary90: rgb(232, 221, 255);
	--md-ref-palette-primary80: rgb(206, 189, 255);
	--md-ref-palette-primary70: rgb(181, 156, 255);
	--md-ref-palette-primary60: rgb(156, 122, 255);
	--md-ref-palette-primary50: rgb(131, 85, 252);
	--md-ref-palette-primary40: rgb(106, 55, 226);
	--md-ref-palette-primary35: rgb(94, 37, 213);
	--md-ref-palette-primary30: rgb(82, 9, 202);
	--md-ref-palette-primary25: rgb(69, 0, 176);
	--md-ref-palette-primary20: rgb(57, 0, 148);
	--md-ref-palette-primary15: rgb(45, 0, 120);
	--md-ref-palette-primary10: rgb(33, 0, 94);
	--md-ref-palette-primary5: rgb(21, 0, 66);
	--md-ref-palette-primary0: rgb(0, 0, 0);
	--md-ref-palette-secondary100: rgb(255, 255, 255);
	--md-ref-palette-secondary99: rgb(255, 251, 255);
	--md-ref-palette-secondary98: rgb(253, 247, 255);
	--md-ref-palette-secondary95: rgb(245, 238, 255);
	--md-ref-palette-secondary90: rgb(232, 221, 255);
	--md-ref-palette-secondary80: rgb(204, 192, 235);
	--md-ref-palette-secondary70: rgb(177, 165, 207);
	--md-ref-palette-secondary60: rgb(150, 139, 179);
	--md-ref-palette-secondary50: rgb(124, 113, 152);
	--md-ref-palette-secondary40: rgb(98, 89, 126);
	--md-ref-palette-secondary35: rgb(86, 77, 113);
	--md-ref-palette-secondary30: rgb(74, 65, 101);
	--md-ref-palette-secondary25: rgb(63, 54, 89);
	--md-ref-palette-secondary20: rgb(52, 43, 77);
	--md-ref-palette-secondary15: rgb(41, 32, 66);
	--md-ref-palette-secondary10: rgb(30, 22, 55);
	--md-ref-palette-secondary5: rgb(19, 11, 44);
	--md-ref-palette-secondary0: rgb(0, 0, 0);
	--md-ref-palette-tertiary100: rgb(255, 255, 255);
	--md-ref-palette-tertiary99: rgb(255, 251, 255);
	--md-ref-palette-tertiary98: rgb(255, 248, 248);
	--md-ref-palette-tertiary95: rgb(255, 236, 240);
	--md-ref-palette-tertiary90: rgb(255, 217, 227);
	--md-ref-palette-tertiary80: rgb(255, 176, 203);
	--md-ref-palette-tertiary70: rgb(230, 147, 176);
	--md-ref-palette-tertiary60: rgb(199, 121, 149);
	--md-ref-palette-tertiary50: rgb(170, 96, 123);
	--md-ref-palette-tertiary40: rgb(141, 72, 99);
	--md-ref-palette-tertiary35: rgb(127, 61, 87);
	--md-ref-palette-tertiary30: rgb(113, 49, 75);
	--md-ref-palette-tertiary25: rgb(99, 38, 63);
	--md-ref-palette-tertiary20: rgb(86, 27, 52);
	--md-ref-palette-tertiary15: rgb(72, 16, 41);
	--md-ref-palette-tertiary10: rgb(59, 5, 31);
	--md-ref-palette-tertiary5: rgb(43, 0, 20);
	--md-ref-palette-tertiary0: rgb(0, 0, 0);
	--md-ref-palette-error100: rgb(255, 255, 255);
	--md-ref-palette-error99: rgb(255, 251, 255);
	--md-ref-palette-error98: rgb(255, 248, 247);
	--md-ref-palette-error95: rgb(255, 237, 234);
	--md-ref-palette-error90: rgb(255, 218, 214);
	--md-ref-palette-error80: rgb(255, 180, 171);
	--md-ref-palette-error70: rgb(255, 137, 125);
	--md-ref-palette-error60: rgb(255, 84, 73);
	--md-ref-palette-error50: rgb(222, 55, 48);
	--md-ref-palette-error40: rgb(186, 26, 26);
	--md-ref-palette-error35: rgb(168, 7, 16);
	--md-ref-palette-error30: rgb(147, 0, 10);
	--md-ref-palette-error25: rgb(126, 0, 7);
	--md-ref-palette-error20: rgb(105, 0, 5);
	--md-ref-palette-error15: rgb(84, 0, 3);
	--md-ref-palette-error10: rgb(65, 0, 2);
	--md-ref-palette-error5: rgb(45, 0, 1);
	--md-ref-palette-error0: rgb(0, 0, 0);
	--md-ref-palette-neutral100: rgb(255, 255, 255);
	--md-ref-palette-neutral99: rgb(255, 251, 255);
	--md-ref-palette-neutral98: rgb(253, 248, 253);
	--md-ref-palette-neutral95: rgb(244, 239, 244);
	--md-ref-palette-neutral90: rgb(230, 225, 230);
	--md-ref-palette-neutral80: rgb(202, 197, 202);
	--md-ref-palette-neutral70: rgb(174, 170, 174);
	--md-ref-palette-neutral60: rgb(147, 143, 148);
	--md-ref-palette-neutral50: rgb(121, 118, 122);
	--md-ref-palette-neutral40: rgb(96, 93, 98);
	--md-ref-palette-neutral35: rgb(84, 81, 86);
	--md-ref-palette-neutral30: rgb(72, 70, 74);
	--md-ref-palette-neutral25: rgb(61, 59, 62);
	--md-ref-palette-neutral20: rgb(49, 48, 51);
	--md-ref-palette-neutral15: rgb(39, 37, 41);
	--md-ref-palette-neutral10: rgb(28, 27, 30);
	--md-ref-palette-neutral5: rgb(18, 16, 20);
	--md-ref-palette-neutral0: rgb(0, 0, 0);
	--md-ref-palette-neutral-variant100: rgb(255, 255, 255);
	--md-ref-palette-neutral-variant99: rgb(255, 251, 255);
	--md-ref-palette-neutral-variant98: rgb(253, 247, 255);
	--md-ref-palette-neutral-variant95: rgb(245, 238, 250);
	--md-ref-palette-neutral-variant90: rgb(230, 224, 236);
	--md-ref-palette-neutral-variant80: rgb(202, 196, 207);
	--md-ref-palette-neutral-variant70: rgb(174, 169, 180);
	--md-ref-palette-neutral-variant60: rgb(147, 143, 153);
	--md-ref-palette-neutral-variant50: rgb(121, 117, 127);
	--md-ref-palette-neutral-variant40: rgb(96, 93, 102);
	--md-ref-palette-neutral-variant35: rgb(84, 81, 90);
	--md-ref-palette-neutral-variant30: rgb(72, 69, 78);
	--md-ref-palette-neutral-variant25: rgb(61, 58, 67);
	--md-ref-palette-neutral-variant20: rgb(50, 47, 56);
	--md-ref-palette-neutral-variant15: rgb(39, 36, 45);
	--md-ref-palette-neutral-variant10: rgb(29, 26, 34);
	--md-ref-palette-neutral-variant5: rgb(18, 16, 23);
	--md-ref-palette-neutral-variant0: rgb(0, 0, 0);
	--md-key-colors-primary: rgb(134, 88, 255);
	--md-source-seed: rgb(134, 88, 255);
	--md-extended-green-seed: rgb(8, 185, 78);
	--md-extended-green-value: rgb(0, 183, 126);
	--md-extended-red-seed: rgb(233, 49, 71);
	--md-extended-red-value: rgb(231, 42, 119);
	--md-extended-orange-seed: rgb(236, 117, 0);
	--md-extended-orange-value: rgb(244, 109, 60);
	--md-extended-yellow-seed: rgb(224, 172, 0);
	--md-extended-yellow-value: rgb(244, 163, 23);
	--md-extended-cyan-seed: rgb(0, 191, 188);
	--md-extended-cyan-value: rgb(5, 189, 208);
	--md-extended-blue-seed: rgb(8, 109, 221);
	--md-extended-blue-value: rgb(81, 100, 224);
	--md-extended-purple-seed: rgb(120, 82, 238);
	--md-extended-purple-value: rgb(122, 81, 237);
	--md-extended-pink-seed: rgb(213, 57, 132);
	--md-extended-pink-value: rgb(203, 59, 172);

	--md-sys-shape-corner-none: 0px;
	--md-sys-shape-corner-extra-small: 4px;
	--md-sys-shape-corner-extra-small-top: 4px 4px 0 0;
	--md-sys-shape-corner-small: 8px;
	--md-sys-shape-corner-medium: 12px;
	--md-sys-shape-corner-large: 16px;
	--md-sys-shape-corner-large-start: 16px 0 0 16px;
	--md-sys-shape-corner-large-end: 0 16px 16px 0;
	--md-sys-shape-corner-large-top: 16px 16px 0 0;
	--md-sys-shape-corner-extra-large: 28px;
	--md-sys-shape-corner-extra-large-top: 28px 28px 0 0;
	--md-sys-shape-corner-full: 1000px;

	--md-sys-state-hover-state-layer-opacity: 0.08;
	--md-sys-state-focus-state-layer-opacity: 0.1;
	--md-sys-state-pressed-state-layer-opacity: 0.1;
	--md-sys-state-drag-state-layer-opacity: 0.16;

	--md-sys-state-focus-indicator-thickness: 3px;
	--md-sys-state-focus-indicator-offset: 2px;

	--md-sys-motion-easing-standard: cubic-bezier(0.2, 0, 0, 1);
	--md-sys-motion-easing-standard-accelerate: cubic-bezier(0.3, 0, 1, 1);
	--md-sys-motion-easing-standard-decelerate: cubic-bezier(0, 0, 0, 1);
	--md-sys-motion-easing-emphasized: var(--md-sys-motion-easing-standard);
	--md-sys-motion-easing-emphasized-accelerate: cubic-bezier(
		0.3,
		0,
		0.8,
		0.15
	);
	--md-sys-motion-easing-emphasized-decelerate: cubic-bezier(
		0.05,
		0.7,
		0.1,
		1
	);
}

.theme-light,
.theme-dark {
	/* Accent color */
	--color-accent: var(--md-sys-primary);
	--color-accent-hsl: var(--md-sys-primary-hsl);

	/* Backgrounds */
	--background-primary: var(--md-sys-surface);
	--background-primary-alt: var(--md-sys-surface-container-low);
	--background-secondary: var(--md-sys-surface-container);
	--background-secondary-alt: var(--md-sys-surface-container-highest);

	/* This should be replaced by a state layer as much as possible. */
	--background-modifier-hover: rgba(
		from var(--md-sys-on-surface-variant) r g b /
			var(--md-sys-state-hover-state-layer-opacity)
	);

	--background-modifier-border: var(--md-sys-outline-variant);

	/* Obsidian uses a darker tone for the following.
	 * It should be OK to use Outline Variant for both.
	 */
	--background-modifier-border-hover: var(--md-sys-outline-variant);
	--background-modifier-border-focus: var(--md-sys-outline-variant);

	--background-modifier-error-rgb: var(--md-sys-error-rgb);
	--background-modifier-error: var(--md-sys-error);
	--background-modifier-error-hover: var(--md-sys-error);
	--background-modifier-success-rgb: var(--md-extended-green-color-rgb);
	--background-modifier-success: var(--md-extended-green-color);
	--background-modifier-message: var(--md-sys-inverse-surface);
	--background-modifier-form-field: var(--md-sys-surface-container-lowest);

	/* Icons */
	--icon-color-focused: var(--md-sys-on-surface-variant);

	/* Nav items */
	--nav-item-background-active: var(--md-sys-secondary-container);
	--nav-item-color-active: var(--md-sys-on-secondary-container);

	/* Interactive */
	--interactive-normal: var(--md-sys-surface-container-highest);

	/* FIXME: Using --background-modifier-hover, but this should be the color of the state layer,
	 * not that of the container. More CSS will be needed for this.
	 */
	--interactive-hover: var(--background-modifier-hover);
	--interactive-accent: var(--md-sys-primary);
	--interactive-accent-hover: rgb(from var(--md-sys-primary) r g b / 0.9);

	/* Scrollbars */
	--scrollbar-active-thumb-bg: var(--md-sys-outline);
	--scrollbar-bg: var(--md-sys-outline);
	--scrollbar-thumb-bg: var(--md-sys-outline-variant);

	/* Shadows */
	--input-shadow: unset;
	--shadow-s: unset;
	--shadow-l: unset;

	/* Sliders */
	--slider-track-background: var(--md-sys-secondary-container);

	/* Texts */
	--text-normal: var(--md-sys-on-surface);
	--text-accent: var(--md-sys-primary);
	--text-on-accent: var(--md-sys-on-primary);
	--text-faint: var(--md-sys-on-surface-variant);
	--text-muted: var(--md-sys-on-surface-variant);

	/* Undocumented */
	/* For the scrim opacity, see https://github.com/material-components/material-components-android/issues/4295 */
	--background-modifier-cover: rgba(from var(--md-sys-scrim) r g b / 0.32);
}

body {
	/* Checkboxes (switches, actually) */
	--checkbox-radius: 2px;

	/* Dropdowns */
	--dropdown-background-position: right 16px top 50%, 0 0;
	--dropdown-background-size: 18px 18px;

	/* Fonts */
	--font-interface-theme: "Roboto";
	--font-text-theme: "Roboto";

	/* Icons */
	--icon-opacity: 1;

	/* Inputs */
	/* TODO: Check this value */
	--input-height: 40px;
	--input-radius: var(--md-sys-shape-corner-extra-large);

	/* Modals */
	--modal-radius: var(--md-sys-shape-corner-medium);

	/* Radiuses */
	--radius-s: var(--md-sys-shape-corner-small);
	--radius-m: var(--md-sys-shape-corner-medium);
	--radius-l: var(--md-sys-shape-corner-large);

	/* Sliders */
	--slider-thumb-border-width: 0px;
	--slider-thumb-radius: var(--md-sys-shape-corner-full);

	/* Tabs */
	--tab-radius-active: var(--md-sys-shape-corner-extra-small-top);
}

button {
	padding: 0 24px 0 24px;
}

button:not(.clickable-icon) {
	background-color: unset;
	--text-color: var(--md-sys-primary);
	outline: 1px solid var(--md-sys-outline);
}

button.mod-cta {
	background-color: var(--md-sys-primary);
	--text-color: var(--md-sys-on-primary);
	outline: none;
}

button.mod-warning {
	background-color: var(--background-modifier-error);
	--text-color: var(--md-sys-on-error);
	outline: none;
}

.checkbox-container,
.checkbox-container.mod-small {
	--switch-track-height: 32px;
	--switch-track-width: 52px;
	--switch-track-outline-color: var(--md-sys-outline);
	--switch-track-outline-width: 2px;
	--switch-track-selected-color: var(--md-sys-primary);
	--switch-track-unselected-color: var(--md-sys-surface-container-highest);

	height: var(--switch-track-height);
	width: var(--switch-track-width);

	box-shadow: unset;
	background-color: var(--md-sys-surface-container-highest);
	border: var(--switch-track-outline-width) solid
		var(--switch-track-outline-color);
	transition: box-shadow 0.15s ease-in-out;
}

.checkbox-container:hover,
.checkbox-container.mod-small:hover {
	box-shadow: unset;
}

.checkbox-container.is-enabled,
.checkbox-container.mod-small.is-enabled {
	background-color: var(--switch-track-selected-color);
	border: 0;
}

.checkbox-container.is-enabled:hover,
.checkbox-container.mod-small.is-enabled:hover {
	box-shadow: unset;
}

.checkbox-container::after,
.checkbox-container.mod-small::after {
	--switch-handle-unselected-height: 16px;
	--switch-handle-selected-height: 24px;
	--switch-handle-pressed-height: 28px;
	--switch-handle-unselected-width: 16px;
	--switch-handle-selected-width: 24px;
	--switch-handle-pressed-width: 28px;
	--switch-handle-unselected-color: var(--md-sys-outline);
	--switch-handle-selected-color: var(--md-sys-on-primary);
	--switch-handle-unselected-outline-width: calc(
		(40px / 2) - (var(--switch-handle-unselected-width) / 2)
	);
	--switch-handle-selected-outline-width: calc(
		(40px / 2) - (var(--switch-handle-selected-width) / 2)
	);
	--switch-handle-pressed-outline-width: calc(
		(40px / 2) - (var(--switch-handle-pressed-width) / 2)
	);

	height: var(--switch-handle-unselected-height);
	width: var(--switch-handle-unselected-width);

	background-color: var(--switch-handle-unselected-color);
	margin: 6px 0 0 6px;
	transform: unset;

	/* TODO: Flutter uses Curves.easeOutBack, Compose doesn't have the bounce anim and uses springs instead. 
	 * Need to pick one and apply it, if possible within this project's constraints.
	 */
	transition: margin 0.1s ease-in-out, width 0.1s ease-in-out,
		height 0.1s ease-in-out;
}

.checkbox-container:hover::after,
.checkbox-container.mod-small:hover::after {
	background-color: var(--md-sys-on-surface-variant);

	/* State layer emulation */
	--state-layer-color: rgba(
		from var(--md-sys-on-surface) r g b /
			var(--md-sys-state-hover-state-layer-opacity)
	);
	outline: var(--switch-handle-unselected-outline-width) solid
		var(--state-layer-color);
}

.checkbox-container:active::after,
.checkbox-container.mod-small:active::after {
	height: var(--switch-handle-pressed-height);
	width: var(--switch-handle-pressed-width);

	margin: 0;

	/* State layer emulation */
	--state-layer-color: rgba(
		from var(--md-sys-on-surface) r g b /
			var(--md-sys-state-pressed-state-layer-opacity)
	);
	outline: var(--switch-handle-pressed-outline-width) solid
		var(--state-layer-color);
}

.checkbox-container.is-enabled::after,
.checkbox-container.mod-small.is-enabled::after {
	height: var(--switch-handle-selected-height);
	width: var(--switch-handle-selected-width);

	background-color: var(--switch-handle-selected-color);
	margin: 4px 0 0 calc(52px - 24px - 4px);
	transform: unset;
}

.checkbox-container.is-enabled:hover::after,
.checkbox-container.mod-small.is-enabled:hover::after {
	background-color: var(--md-sys-primary-container);

	/* State layer emulation */
	--state-layer-color: rgba(
		from var(--md-sys-primary) r g b /
			var(--md-sys-state-hover-state-layer-opacity)
	);
	outline: var(--switch-handle-selected-outline-width) solid
		var(--state-layer-color);
}

.checkbox-container.is-enabled:active::after,
.checkbox-container.mod-small.is-enabled:active::after {
	height: var(--switch-handle-pressed-height);
	width: var(--switch-handle-pressed-width);

	left: revert;
	margin: 2px 0 0 calc(52px - 24px - 6px);
	transform: unset;

	/* State layer emulation */
	--state-layer-color: rgba(
		from var(--md-sys-primary) r g b /
			var(--md-sys-state-pressed-state-layer-opacity)
	);
	outline: var(--switch-handle-pressed-outline-width) solid
		var(--state-layer-color);
}

.dropdown {
	padding: 0 42px 0 24px;
	outline: 1px solid var(--md-sys-outline);
	background-color: unset;
	color: var(--md-sys-primary);
}

.clickable-icon:hover {
	background-color: unset;
}

.clickable-icon:focus-visible {
	box-shadow: unset;
	outline: unset;
}

.clickable-icon:active {
	background-color: unset;
}

.clickable-icon::after {
	/* Not using 40dp because not all icons are 24dp in Obsidian. */
	--state-layer-base-color: var(--md-sys-on-surface-variant);
	--state-layer-size: calc(40 * var(--icon-size) / 24);
	content: "";
	position: absolute;
	width: var(--state-layer-size);
	height: var(--state-layer-size);

	border-radius: var(--md-sys-shape-corner-full);
}

.clickable-icon:hover::after {
	background-color: rgb(
		from var(--state-layer-base-color) r g b /
			var(--md-sys-state-hover-state-layer-opacity)
	);
}

.clickable-icon:focus-visible::after {
	outline: var(--md-sys-state-focus-indicator-thickness) solid
		var(--md-sys-secondary);
	outline-offset: var(--md-sys-state-focus-indicator-offset);
}

.clickable-icon:active::after {
	background-color: rgb(
		from var(--state-layer-base-color) r g b /
			var(--md-sys-state-pressed-state-layer-opacity)
	);
}

.nav-file-title,
.nav-folder-title {
	border-radius: var(--radius-l);
}

input.pdf-page-input,
.setting-item-control > textarea,
.setting-item-control > input:not(.slider, [type="color"]) {
	background: var(--md-sys-surface-container-highest);
	border: unset;
	border-bottom: 1px solid var(--md-sys-on-surface-variant);
	border-radius: var(--md-sys-shape-corner-extra-small-top);
	color: var(--md-sys-on-surface);
	transition: border 0.15s var(--md-sys-motion-easing-standard);
}

input.pdf-page-input:not(.mod-page-loading):hover,
.setting-item-control > textarea:hover,
.setting-item-control > input:not(.slider, [type="color"]):hover {
	border-bottom: 1px solid var(--md-sys-on-surface-variant);
}

input.pdf-page-input:not(.mod-page-loading):focus,
.setting-item-control > textarea:focus,
.setting-item-control > input:not(.slider, [type="color"]):focus {
	border-bottom: 3px solid var(--md-sys-primary);
}

textarea:active,
input.metadata-input-text:active,
input[type="date"]:active,
input[type="datetime-local"]:active,
input[type="text"]:active,
input[type="search"]:active,
input[type="email"]:active,
input[type="password"]:active,
input[type="number"]:active,
textarea:focus,
input.metadata-input-text:focus,
input[type="date"]:focus,
input[type="datetime-local"]:focus,
input[type="text"]:focus,
input[type="search"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
input[type="number"]:focus {
	box-shadow: unset;
}

.pdf-page-input.mod-page-loading {
	/* Consider this is a disabled text field. */
	background: rgb(from var(--md-sys-on-surface) r g b / 0.04);
	color: rgb(from var(--md-sys-on-surface) r g b / 0.38);
	border-bottom: 1px solid rgb(from var(--md-sys-on-surface) r g b / 0.38);
}

@media (hover: hover) {
	textarea:hover,
	input.metadata-input-text:hover,
	input[type="date"]:hover,
	input[type="datetime-local"]:hover,
	input[type="text"]:hover,
	input[type="search"]:hover,
	input[type="email"]:hover,
	input[type="password"]:hover,
	input[type="number"]:hover {
		transition: border 0.15s var(--md-sys-motion-easing-standard);
	}
}

input[type="range"]::-webkit-slider-thumb {
	background: var(--md-sys-primary);
	box-shadow: unset;
}

input[type="range"]::-webkit-slider-thumb:hover,
input[type="range"]::-webkit-slider-thumb:active,
body:not(.is-mobile)input[type="range"]:focus::-webkit-slider-thumb,
body:not(.is-mobile) input[type="range"]:focus-visible::-webkit-slider-thumb {
	background: var(--md-sys-primary);
	box-shadow: unset;
}

.search-input-container {
	height: 40px;
	display: flex;
	flex-direction: row;
	align-items: center;
	padding: 0 8px;
	gap: 8px;

	background-color: var(--md-sys-surface-container-highest);
	border-radius: var(--md-sys-shape-corner-full);
}

.search-input-container::before {
	position: unset;
	background-color: var(--md-sys-on-surface);
}

.search-input-container input {
	padding: unset;
	flex: 1;

	background-color: unset;
	border: unset;
	border-radius: unset;
	color: var(--md-sys-on-surface);
}

.search-input-container input::placeholder {
	color: var(--md-sys-on-surface-variant);
}

.search-input-container .search-input-clear-button {
	position: unset;
	width: unset;
	height: unset;
	margin: unset;
}

.search-input-container .input-right-decorator {
	position: unset;
	transform: unset;
	color: var(--md-sys-on-surface-variant);
}

.search-input-container.mod-hotkey .clickable-icon {
	padding: unset;
}

.setting-hotkey {
	border-radius: var(--md-sys-shape-corner-small);
	background-color: var(--md-sys-secondary-container);
	color: var(--md-sys-on-secondary-container);
}

.setting-hotkey-icon .svg-icon {
	color: var(--md-sys-on-secondary-container);
	opacity: 1;
}

.setting-hotkey.mod-empty {
	outline: 1px solid var(--md-sys-outline-variant);
	background-color: unset;
	color: var(--md-sys-on-surface-variant);
}

.setting-hotkey-icon.mod-empty .svg-icon {
	color: var(--md-sys-on-surface-variant);
}

@media (hover: hover) {
	.setting-hotkey-icon:hover .svg-icon {
		color: var(--md-sys-on-error);
	}
}

@media (hover: hover) {
	.setting-delete-hotkey:hover {
		background-color: var(--background-modifier-error);
		color: var(--md-sys-on-error);
	}
}

.tooltip {
	color: var(--md-sys-inverse-on-surface);
}

.tooltip.mod-error {
	width: 200px;
	background-color: var(--background-modifier-error);
	color: var(--md-sys-on-error);
}

.workspace-tab-header.is-active::before,
.workspace-tab-header.is-active::after {
	display: none;
}

svg * {
	stroke-linecap: square;
	stroke-linejoin: miter;
	rx: 0;
	ry: 0;
}

.menu {
	padding: var(--size-2-1);
}

.menu-item {
	padding: var(--size-4-1) var(--size-4-2);
}

.menu-separator {
	margin: var(--size-2-1) calc(var(--size-2-1) * -1);
}

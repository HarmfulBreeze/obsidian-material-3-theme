@use 'sass:map';
@use 'pkg:@material/web/tokens/md-comp-dialog';
@use 'pkg:@material/web/tokens/md-comp-icon-button';
@use 'pkg:@material/web/tokens/md-comp-list';
@use 'pkg:@material/web/tokens/md-comp-list-item';
@use 'pkg:@material/web/tokens/md-comp-suggestion-chip';
@use 'pkg:@material/web/tokens/md-sys-elevation';
@use 'pkg:@material/web/tokens/md-sys-shape';
@use 'pkg:@material/web/tokens/md-sys-state';
@use 'pkg:@material/web/tokens/md-sys-typescale';

@use '../icons';
@use '../tokens';
@use 'focus-ring';
@use 'ripple';

$_md-comp-dialog: md-comp-dialog.values();
$_md-comp-icon-button: md-comp-icon-button.values();
$_md-comp-list: md-comp-list.values();
$_md-comp-list-item: md-comp-list-item.values();
$_md-comp-sheet-bottom: tokens.comp-sheet-bottom-values();
$_md-comp-suggestion-chip: md-comp-suggestion-chip.values();

$_search-bar-deps: (
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@mixin styles($md-sys-color) {
  $deps: map.merge(
    $_search-bar-deps,
    (
      'md-sys-color': $md-sys-color,
    )
  );
  $md-comp-search-bar: tokens.comp-search-bar-values(
    $deps,
    $exclude-custom-properties: true
  );

  &.is-phone {
    .modal.mod-settings {
      .modal-close-button {
        &:has(~ .modal-header .modal-setting-back-button) {
          display: none;
        }

        &::before {
          font-size: 2rem;
          height: 24px;
          width: 24px;
        }

        align-items: center;
        display: flex;
        height: 48px;
        inset-inline: 0;
        justify-content: center;
        top: calc(var(--safe-area-inset-top) + 8px);
        width: 48px;
      }

      .modal-header {
        background-color: var(--md-sys-color-surface-container);
        border: unset;
        height: calc(var(--safe-area-inset-top) + 64px);
        padding-block: var(--safe-area-inset-top) 0;

        .modal-title {
          align-items: center;
          display: flex;
          height: 100%;
          margin: unset;
          max-width: unset;

          &:not(:has(.modal-setting-back-button)) {
            justify-content: center;
          }

          .modal-setting-back-button {
            height: 48px;
            inset-inline: 0;
            position: static;
            width: 48px;

            .modal-setting-back-button-icon {
              margin: unset;

              .svg-icon {
                height: 24px;
                width: 24px;
              }
            }
          }
        }
      }

      .modal-content {
        .vertical-tab-header-group {
          .vertical-tab-header-group-title {
            align-content: center;
            height: 56px;
            padding: 0 16px;
          }

          .vertical-tab-header-group-items {
            .vertical-tab-nav-item {
              border: unset;
              font-size: 1rem;
              height: 56px;
              justify-content: space-between;
              letter-spacing: 0.03125rem;
              line-height: 1.5rem;
              padding-inline: 16px;

              .vertical-tab-nav-item-chevron {
                margin: unset;

                .svg-icon {
                  height: 24px;
                  width: 24px;
                }
              }
            }
          }
        }
      }
    }

    .modal-container .prompt {
      border-end-end-radius: map.get(
        $_md-comp-sheet-bottom,
        'docked-container-shape-end-end'
      );
      border-end-start-radius: map.get(
        $_md-comp-sheet-bottom,
        'docked-container-shape-end-start'
      );
      border-start-end-radius: map.get(
        $_md-comp-sheet-bottom,
        'docked-container-shape-start-end'
      );
      border-start-start-radius: map.get(
        $_md-comp-sheet-bottom,
        'docked-container-shape-start-start'
      );
    }
  }

  &:not(.is-phone) {
    .modal.mod-settings {
      .modal-content {
        .vertical-tab-nav-item {
          border-radius: var(--md-sys-shape-corner-full);

          &.is-active {
            background-color: var(--md-sys-color-secondary-container);
            color: var(--md-sys-color-on-secondary-container);
          }
        }
      }
    }
  }

  .modal-container .prompt {
    background-color: var(--md-sys-color-surface);
    border: unset;
    border-radius: map.get($_md-comp-dialog, 'container-shape');

    .prompt-input-container {
      align-items: center;
      background-color: var(--md-sys-color-surface-container-high);
      border: unset;
      border-radius: var(--md-sys-shape-corner-full);
      gap: 16px;
      margin-block: 8px;
      margin-inline: 16px;
      min-height: 56px;
      padding-inline-start: 16px;

      &::before {
        content: '';
        height: 24px;
        width: 24px;

        @include icons.search-background(
          map.get($md-comp-search-bar, 'leading-icon-color')
        );
      }

      .prompt-input {
        background-color: transparent;
        border: unset;
        color: map.get($md-comp-search-bar, 'input-text-color');
        font-family: map.get($md-comp-search-bar, 'input-text-font');
        font-size: map.get($md-comp-search-bar, 'input-text-size');
        font-weight: map.get($md-comp-search-bar, 'input-text-weight');
        line-height: map.get($md-comp-search-bar, 'input-text-line-height');
        padding: unset;

        &::placeholder {
          color: map.get($md-comp-search-bar, 'supporting-text-color');
          font-family: map.get($md-comp-search-bar, 'supporting-text-font');
          font-size: map.get($md-comp-search-bar, 'supporting-text-size');
          font-weight: map.get($md-comp-search-bar, 'supporting-text-weight');
          line-height: map.get(
            $md-comp-search-bar,
            'supporting-text-line-height'
          );
        }
      }

      .search-input-clear-button {
        height: 48px;
        inset: unset;
        margin: unset;
        min-width: 48px;
        position: unset;

        &::after {
          $color: map.get($md-comp-search-bar, 'trailing-icon-color');

          background-color: unset;
          height: 24px;
          mask-image: unset;
          width: 24px;

          @include icons.close-background($color);
        }

        @include ripple.theme(
          (
            'height': map.get($_md-comp-icon-button, 'state-layer-height'),
            'hover-color':
              map.get($_md-comp-icon-button, 'hover-state-layer-color'),
            'hover-opacity':
              map.get($_md-comp-icon-button, 'hover-state-layer-opacity'),
            'pressed-color':
              map.get($_md-comp-icon-button, 'pressed-state-layer-color'),
            'pressed-opacity':
              map.get($_md-comp-icon-button, 'pressed-state-layer-opacity'),
            'shape': map.get($_md-comp-icon-button, 'state-layer-shape'),
            'width': map.get($_md-comp-icon-button, 'state-layer-width'),
          )
        );
        @include ripple.styles-before();
      }
    }

    .prompt-results {
      background-color: map.get($_md-comp-list, 'container-color');
      padding: unset;

      .suggestion-item {
        $shape: var(--md-sys-shape-corner-none);

        align-items: center;
        background-color: transparent;
        border-radius: $shape;
        color: map.get($_md-comp-list-item, 'label-text-color');
        font-family: map.get($_md-comp-list-item, 'label-text-font');
        font-size: map.get($_md-comp-list-item, 'label-text-size');
        font-weight: map.get($_md-comp-list-item, 'label-text-weight');
        height: map.get($_md-comp-list-item, 'one-line-container-height');
        line-height: map.get($_md-comp-list-item, 'label-text-line-height');
        padding-inline: {
          start: map.get($_md-comp-list-item, 'leading-space');
          end: map.get($_md-comp-list-item, 'trailing-space');
        }

        &.is-selected:not(:active) {
          $color: map.get($_md-comp-list-item, 'hover-state-layer-color');
          $opacity: map.get($_md-comp-list-item, 'hover-state-layer-opacity');
          background-color: rgb(from $color r g b / $opacity);
        }

        @include ripple.theme(
          (
            'hover-color':
              map.get($_md-comp-list-item, 'hover-state-layer-color'),
            // Using .is-selected instead
            'hover-opacity': 0,
            'pressed-color':
              map.get($_md-comp-list-item, 'pressed-state-layer-color'),
            'pressed-opacity':
              map.get($_md-comp-list-item, 'pressed-state-layer-opacity'),
            'shape': $shape,
          )
        );
        @include ripple.styles-after();

        .suggestion-aux:has(.suggestion-hotkey) {
          gap: 8px;

          kbd {
            align-content: center;
            background-color: transparent;
            border: map.get($_md-comp-suggestion-chip, 'outline-width') solid
              map.get($_md-comp-suggestion-chip, 'outline-color');
            border-radius: map.get(
              $_md-comp-suggestion-chip,
              'container-shape'
            );
            color: map.get($_md-comp-suggestion-chip, 'label-text-color');
            font-family: map.get($_md-comp-suggestion-chip, 'label-text-font');
            font-size: map.get($_md-comp-suggestion-chip, 'label-text-size');
            font-weight: map.get(
              $_md-comp-suggestion-chip,
              'label-text-weight'
            );
            height: map.get($_md-comp-suggestion-chip, 'container-height');
            line-height: map.get(
              $_md-comp-suggestion-chip,
              'label-text-line-height'
            );
            margin: unset;
            padding-block: unset;
            padding-inline: {
              start: map.get($_md-comp-suggestion-chip, 'leading-space');
              end: map.get($_md-comp-suggestion-chip, 'trailing-space');
            }
          }
        }
      }
    }

    .prompt-instructions {
      background-color: var(--md-sys-color-surface-container);
    }
  }
}

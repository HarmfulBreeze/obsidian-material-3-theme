@use 'sass:map';
@use 'pkg:@material/web/tokens/md-comp-navigation-drawer';
@use 'pkg:@material/web/tokens/md-comp-outlined-button';
@use 'pkg:@material/web/tokens/md-sys-shape';
@use 'pkg:@material/web/tokens/md-sys-state';

@use '../icons';
@use '../tokens';
@use '../utils';

$_outlined-button-deps: (
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': tokens.typescale-values(),
);
$_md-sys-shape: md-sys-shape.values();

@mixin styles($md-sys-color) {
  $button-deps: map.merge(
    $_outlined-button-deps,
    (
      'md-sys-color': $md-sys-color,
    )
  );
  $md-comp-outlined-button: md-comp-outlined-button.values(
    $button-deps,
    $exclude-custom-properties: true
  );

  $md-comp-navigation-drawer: md-comp-navigation-drawer.values(
    $exclude-custom-properties: true,
  );

  &.is-mobile {
    $background-color: map.get(
      $md-comp-navigation-drawer,
      'modal-container-color'
    );

    .workspace-drawer {
      // TODO: Set border-radius using comp tokens
      $shape: map.get($_md-sys-shape, 'corner-large-end');
      @include utils.shape-define-border-radius($shape);

      background-color: $background-color;
    }

    .workspace-drawer-inner {
      background-color: $background-color;
    }

    .workspace-drawer-header .clickable-icon {
      color: map.get($md-comp-navigation-drawer, 'inactive-icon-color');
      height: 48px;
      padding: unset;
      width: 48px;
    }

    .workspace-drawer-active-tab-container {
      background-color: $background-color;

      .nav-header {
        align-content: center;
        background-color: var(--md-sys-color-surface-container-high);
        border: unset;
        min-height: calc(var(--safe-area-inset-bottom) + 64px);
        padding-block: 0 var(--safe-area-inset-bottom);
      }

      .nav-buttons-container {
        padding-inline: 16px;

        .clickable-icon {
          color: map.get($md-comp-navigation-drawer, 'inactive-icon-color');
          height: 48px;
          padding: unset;
          max-width: 48px;
        }
      }
    }

    .workspace-drawer-active-tab-header {
      background-color: transparent;
      border: map.get($md-comp-outlined-button, 'outline-width') solid
        map.get($md-comp-outlined-button, 'outline-color');
      border-radius: map.get($md-comp-outlined-button, 'container-shape');
      color: var(--md-sys-color-primary);
      padding-inline: {
        start: map.get(
          $md-comp-outlined-button,
          'with-trailing-icon-leading-space'
        );
        end: map.get(
          $md-comp-outlined-button,
          'with-trailing-icon-trailing-space'
        );
      }
      height: map.get($md-comp-outlined-button, 'container-height');

      .workspace-drawer-active-tab-title {
        color: map.get($md-comp-outlined-button, 'label-text-color');
        font-family: map.get($md-comp-outlined-button, 'label-text-font');
        font-size: map.get($md-comp-outlined-button, 'label-text-size');
        font-weight: map.get($md-comp-outlined-button, 'label-text-weight');
        line-height: map.get(
          $md-comp-outlined-button,
          'label-text-line-height'
        );
      }

      .clickable-icon {
        $color: map.get($md-comp-outlined-button, 'icon-color');
        $size: map.get($md-comp-outlined-button, 'icon-size');

        color: $color;
        height: $size;
        padding: unset;
        width: $size;

        svg {
          display: none;
        }

        @include icons.dropdown-background($color, $size: $size);
      }
    }
  }
}
